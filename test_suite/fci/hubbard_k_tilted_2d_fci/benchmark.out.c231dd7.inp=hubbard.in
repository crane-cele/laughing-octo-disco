
   HANDE

 ================================================================
 Compiled on May 11 2015 at 16:21:35
 Compiled using cmth.mpi.ds32.(optimised)
 VCS BASE repository version:
     c231dd7f80cb3aadfb70c7a04e6e90488b57b98b
 Hostname:
     pauling
 Working directory: 
     /home/jspencer/projects/hande.det_size/test_suite/fci/hubbard_k_tilted_2d_fci
 Started running on 11/05/2015 at 16:44:27
 Calculation UUID: 8e657f9e-a25f-4f27-b35b-374263101692.
 ================================================================

 Input options
 -------------

sys = hubbard_k {
    electrons = 4,
    lattice = { {2, 2}, {2, -2} },
    ms = 0,
    sym = 1,
    twist = {0.1, 0.1},
}

fci {
    sys = sys,
    fci = {
        blacs_block_size = 2,
    },
}

 -------------

 Basis functions
 ---------------

 Spin given in units of 1/2.
 k-points given in terms of the reciprocal lattice vectors of the crystal cell.
 Applying a twist angle of: (0.1000,0.1000).

 index   k-point        ms     <i|h|i>
     1   (  0,  0)      1     -3.23606798
     2   (  0,  0)     -1     -3.23606798
     3   ( -1,  0)      1     -2.35114101
     4   ( -1,  0)     -1     -2.35114101
     5   (  0, -1)      1     -0.00000000
     6   (  0, -1)     -1     -0.00000000
     7   (  1, -1)      1      0.00000000
     8   (  1, -1)     -1      0.00000000
     9   (  0,  1)      1     -0.00000000
    10   (  0,  1)     -1     -0.00000000
    11   (  1,  1)      1      0.00000000
    12   (  1,  1)     -1      0.00000000
    13   (  1,  0)      1      2.35114101
    14   (  1,  0)     -1      2.35114101
    15   (  2,  0)      1      3.23606798
    16   (  2,  0)     -1      3.23606798

 Number of electrons: 4
 Number of basis functions: 16

 Bit-length of integers used to store determinant bit-strings: 32
 Number of integers used to store determinant bit-strings: 1

 Symmetry information
 --------------------

 The table below gives the label and inverse of each wavevector.

 Index    k-point      Inverse
   1      (  0,  0)        1
   2      ( -1,  0)        7
   3      (  0, -1)        5
   4      (  1, -1)        4
   5      (  0,  1)        3
   6      (  1,  1)        6
   7      (  1,  0)        2
   8      (  2,  0)        8

 The matrix below gives the result of k_i+k_j to within a reciprocal lattice vector.

  1  2  3  4  5  6  7  8
  2  8  6  3  4  5  1  7
  3  6  8  2  1  7  4  5
  4  3  2  1  7  8  5  6
  5  4  1  7  8  2  6  3
  6  5  7  8  2  1  3  4
  7  1  4  5  6  3  8  2
  8  7  5  6  3  4  2  1

 FCI
 ---

 The table below gives the number of determinants for each symmetry with Ms=0.

 Symmetry index      # dets
         1              104
         2               96
         3               96
         4               96
         5               96
         6               96
         7               96
         8              104

 Symmetry of selected Hilbert subspace: 1.
 Spin of selected Hilbert subspace: 0.

 Performing exact diagonalisation...

 LAPACK diagonalisation results
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  State     Energy
      1    -6.193042457542
      2    -6.185567697627
      3    -6.181329341898
      4    -6.176674361780
      5    -6.173278454206
      6    -5.587208986670
      7    -5.587208986670
      8    -5.396488919190
      9    -5.367803942664
     10    -5.167075825513
     11    -5.135311746153
     12    -5.134244134645
     13    -5.124722538230
     14    -5.080126224186
     15    -4.970469797797
     16    -4.930804747812
     17    -4.924020239521
     18    -4.785530153744
     19    -4.293192371366
     20    -4.284923967257
     21    -4.233905820677
     22    -4.214816000962
     23    -4.124743644409
     24    -3.635226105087
     25    -0.884926968330
     26    -0.884926968330
     27    -0.694208434681
     28    -0.549429160083
     29    -0.544788599638
     30    -0.520273336930
     31    -0.516072230280
     32    -0.466218732718
     33    -0.333063077428
     34    -0.290600392026
     35    -0.172735366697
     36    -0.049900013112
     37    -0.000000000000
     38    -0.000000000000
     39     0.000000000000
     40     0.000000000000
     41     0.183083587760
     42     0.205202363474
     43     0.230087587224
     44     0.231957087602
     45     0.242629849950
     46     0.245412019075
     47     0.275138557428
     48     0.285365294472
     49     0.296524509611
     50     0.296964224002
     51     0.320270314117
     52     0.492110127458
     53     0.498384382871
     54     0.498464517870
     55     0.555958543297
     56     0.597972128173
     57     0.709675354250
     58     0.731092150868
     59     0.739177918568
     60     0.743897259498
     61     0.755885642843
     62     0.756439839718
     63     0.762136628531
     64     0.791651635290
     65     0.841393157232
     66     0.884926968330
     67     0.884926968330
     68     0.890744984841
     69     1.216537261662
     70     1.421912300265
     71     1.429960003018
     72     1.497620529540
     73     1.518969009464
     74     1.532139109313
     75     1.539476108476
     76     1.556207907501
     77     1.666837769830
     78     1.712497373933
     79     1.813955277876
     80     2.008192518137
     81     5.036601362573
     82     5.045179693059
     83     5.053625448332
     84     5.059951600966
     85     5.066530090662
     86     5.587208986670
     87     5.587208986670
     88     5.861229112055
     89     5.882830738215
     90     6.074197136771
     91     6.124683057164
     92     6.127646393577
     93     6.134307930445
     94     6.164395884378
     95     6.283156596070
     96     6.309195404965
     97     6.336189059656
     98     6.445794670920
     99     6.948915621911
    100     6.986070844525
    101     7.003044731791
    102     7.057909563867
    103     7.114520050366
    104     7.642688008553

 ================================================================
 Finished running on 11/05/2015 at 16:44:27
 Wall time (seconds):                           0.05
 CPU time (per processor, seconds):             0.01
 ================================================================

